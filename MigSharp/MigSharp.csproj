<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Title>Mig#</Title>
    <Version>4.0.1.1</Version>
    <Authors>dradovic</Authors>
    <Company />
    <Description>A .NET framework for multi-database platform migrations, versioning and schema modifications. Write database migrations and/or schema modifications in your favorite .NET language and let Mig# generate the platform-dependent SQL code and update your schema. Features: fluent interface, automatic versioning, multi-module support, scripting to SQL files, validation framework for portability issues, suport for SQL Server, Oracle, MySQL, Teradata, SQLite, legacy integration and more.</Description>
    <Copyright />
    <PackageLicenseUrl>https://github.com/dradovic/MigSharp/blob/master/LICENSE.txt</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/pkradioman/MigSharp.git</PackageProjectUrl>
    <PackageTags>mig# migsharp schema migration database agnostic fluent versioning sql oracle teradata sqlite mysql</PackageTags>
    <PackageReleaseNotes>4.0.1.1
- Add SqlCe4 Provider support

4.0.1
- Added lost xml-doc file

4.0.0
GENERAL:
This major release is fully compatible with the previous DB schema that Mig# used to keep track of migration history; in other words you can upgrade to this version and use it on existing databases
- targeting .NET Standard 2.0 so Mig# runs on both .NET Framework and .NET Core
- using MEF2 (https://www.nuget.org/packages/Microsoft.Composition/)
- Migrate.exe and Generate.exe are not part of the NuGet package anymore (open an issue if you feel you need these tools in order to start a discussion)
SQL Server:
- dropped support for SQL Server 2005 and SQL Server 2008 (although, Mig# very likely still runs on those platforms too)
Oracle:
- Managed: switched to Oracle.ManagedDataAccess.Client
- ODBC: continues to work as in Mig# 3.x (also works on .NET Core)
Teradata:
- dropped support for Teradata (open an issue if you miss that support so we can discuss)
BUG FIXES:
- #70: Generate.exe Throws Exception when called with no arguments
</PackageReleaseNotes>
    <NeutralLanguage>en</NeutralLanguage>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\Open.snk</AssemblyOriginatorKeyFile>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Configurations>Debug;Release;CodeAnalysis</Configurations>
    <CodeAnalysisRuleSet>..\MigSharp.ruleset</CodeAnalysisRuleSet>
    <AssemblyVersion>4.0.1.1</AssemblyVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <OutputPath>..\bin\Debug\</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <OutputPath>..\bin\Release\</OutputPath>
    <DocumentationFile>..\bin\Release\netstandard2.0\MigSharp.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CodeAnalysis|AnyCPU'">
    <OutputPath>..\bin\CodeAnalysis\</OutputPath>
  </PropertyGroup>

  <ItemGroup Condition="'$(Configuration)|$(Platform)'=='CodeAnalysis|AnyCPU'">
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.Composition" Version="1.1.0" />
  </ItemGroup>

</Project>
